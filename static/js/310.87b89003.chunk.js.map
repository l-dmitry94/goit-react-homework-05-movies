{"version":3,"file":"static/js/310.87b89003.chunk.js","mappings":"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","sources":["helpers/helpers.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["const helpers = {\n    getYear: dateString => {\n        const date = new Date(dateString);\n        return date.getFullYear();\n    },\n\n    normalizedArr: arr => {\n        return arr.map(({ name }, index, arr) => (\n            <span key={index}>\n                {name}\n                {index !== arr.length - 1 ? ', ' : ''}\n            </span>\n        ));\n    }\n}\n\nexport default helpers","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst Styled = {\n    Wrapper: styled.div`\n        display: flex;\n        gap: 40px;\n        line-height: 1.5;\n    `,\n\n    ImageWrapper: styled.div`\n        max-width: 350px;\n    `,\n\n    Info: styled.div`\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        flex: 1;\n    `,\n\n    Title: styled.h2`\n        font-size: 28px;\n        margin-bottom: 8px;\n    `,\n\n    TitleOriginal: styled.p`\n        font-size: 18px;\n        color: #777777;\n        margin-bottom: 20px;\n    `,\n\n    TitleBold: styled.b`\n        display: inline-block;\n        width: 120px;\n    `,\n\n    Overview: styled.b`\n        display: block;\n    `,\n\n    Details: styled.div`\n        margin-top: 20px;\n    `,\n\n    DetailsTitle: styled.h3`\n      font-size: 20px; \n      margin-bottom: 16px; \n    `,\n\n    DetailsList: styled.ul`\n        display: flex;\n        gap: 20px;\n        margin-bottom: 40px;\n    `,\n\n    DetailsLink: styled(NavLink)`\n        min-width: 100px;\n        display: inline-block;\n        text-align: center;\n        background-color: #d8d4d4;\n        font-size: 18px;\n        color: #111111;\n        font-weight: 500;\n        border-radius: 4px;\n        padding: 8px 10px;\n\n        &.active {\n            color: #fff;\n            background-color: #d97828;\n        }\n    `,\n\n};\n\nexport default Styled;\n","import { Outlet } from 'react-router-dom';\nimport helpers from 'helpers';\nimport Styled from './MovieInfo.styled';\n\nconst {\n    Wrapper,\n    ImageWrapper,\n    Info,\n    Title,\n    TitleOriginal,\n    TitleBold,\n    Overview,\n    Details,\n    DetailsList,\n    DetailsLink,\n    DetailsTitle,\n} = Styled;\n\nconst MovieInfo = ({ movieInfo }) => {\n    const {\n        poster_path,\n        title,\n        original_title,\n        overview,\n        genres,\n        production_countries,\n        release_date,\n        tagline,\n    } = movieInfo;\n\n    return (\n        <Wrapper>\n            <ImageWrapper>\n                <img\n                    src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                    alt={title}\n                />\n            </ImageWrapper>\n            <Info>\n                <div>\n                    <Title>{`${title} (${helpers.getYear(\n                        release_date\n                    )})`}</Title>\n                    <TitleOriginal>{original_title}</TitleOriginal>\n                </div>\n\n                {tagline && (\n                    <p>\n                        <TitleBold>Slogan: </TitleBold>\n                        {tagline}\n                    </p>\n                )}\n                <p>\n                    <TitleBold>Country: </TitleBold>\n                    {helpers.normalizedArr(production_countries)}\n                </p>\n                <p>\n                    <TitleBold>Genres: </TitleBold>\n                    {helpers.normalizedArr(genres)}\n                </p>\n                <p>\n                    <Overview>Overview: </Overview>\n                    {overview}\n                </p>\n                <Details>\n                    <DetailsTitle>Additional information</DetailsTitle>\n\n                    <DetailsList>\n                        <li>\n                            <DetailsLink to={'cast'}>Cast</DetailsLink>\n                        </li>\n                        <li>\n                            <DetailsLink to={'reviews'}>Reviews</DetailsLink>\n                        </li>\n                    </DetailsList>\n                    <Outlet />\n                </Details>\n            </Info>\n        </Wrapper>\n    );\n};\n\nexport default MovieInfo;\n","import styled from '@emotion/styled';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nconst Styled = {\n    StyledLink: styled(Link)`\n        display: inline-flex;\n        align-items: center;\n        gap: 8px;\n        text-transform: uppercase;\n        transition: color 0.2s linear;\n        margin-bottom: 40px;\n\n        &:is(:hover, :focus) {\n            color: orange;\n        }\n    `,\n    BackIcon: styled(HiArrowLeft)`\n        width: 16px;\n        height: 16px;\n    `,\n};\n\nexport default Styled;\n","import Styled from './BackLink.styled';\n\nconst { StyledLink, BackIcon } = Styled;\n\nconst BackLink = ({ to, children }) => {\n    return (\n        <StyledLink to={to}>\n            <BackIcon />\n            {children}\n        </StyledLink>\n    );\n};\n\nexport default BackLink;\n","import { Loading } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.7.min.css';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport MovieInfo from 'components/MovieInfo';\nimport API from 'services/movies-api';\nimport BackLink from 'components/BackLink';\n\nconst MovieDetails = () => {\n    const [movieInfo, setMovieInfo] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n    useEffect(() => {\n        const movieById = async () => {\n            Loading.standard();\n            try {\n                const data = await API.fetchMovieById(movieId);\n                setMovieInfo(data);\n            } catch (error) {\n                console.log(error.message);\n            } finally {\n                Loading.remove();\n            }\n        };\n\n        movieById();\n    }, [movieId]);\n\n    return (\n        <>\n            {movieInfo && (\n                <>\n                    <BackLink to={backLinkHref}>Go back</BackLink>\n\n                    <MovieInfo movieInfo={movieInfo} />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    headers: {\n        Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMzQxZjA4MDA4NmRkZjBkNThjNGJkYzA3ZWY0YTAzNiIsInN1YiI6IjY1YTYzZjQxOWJjZDBmMDEyM2JhNzNmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9KEtiGYN_3JrU51Sf_c_is4ZEHWjNunRsBdl0i-lHic',\n    },\n});\n\nconst API = {\n    fetchTrendingMovies: async () => {\n        const response = await instance.get('/trending/movie/day');\n        return response.data.results;\n    },\n\n    fetchMovieById: async movieId => {\n        const response = await instance.get(`/movie/${movieId}`);\n        return response.data;\n    },\n\n    fetchMovieCast: async movieId => {\n        const response = await instance.get(`/movie/${movieId}/credits`);\n        return response.data.cast;\n    },\n\n    fetchMovieReviews: async movieId => {\n        const response = await instance.get(`/movie/${movieId}/reviews`);\n        return response.data;\n    },\n\n    fetchMovieByQuery: async query => {\n        const response = await instance.get(`/search/movie?query=${query}`);\n        return response.data.results;\n    },\n};\n\nexport default API;\n"],"names":["getYear","dateString","Date","getFullYear","normalizedArr","arr","map","_ref","index","name","_jsxs","children","length","Wrapper","styled","_templateObject","_taggedTemplateLiteral","ImageWrapper","_templateObject2","Info","_templateObject3","Title","_templateObject4","TitleOriginal","_templateObject5","TitleBold","_templateObject6","Overview","_templateObject7","Details","_templateObject8","DetailsTitle","_templateObject9","DetailsList","_templateObject10","DetailsLink","NavLink","_templateObject11","Styled","movieInfo","poster_path","title","original_title","overview","genres","production_countries","release_date","tagline","_jsx","src","concat","alt","helpers","to","Outlet","StyledLink","Link","BackIcon","HiArrowLeft","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovieInfo","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","movieById","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","Loading","API","sent","t0","console","log","message","finish","stop","apply","arguments","_Fragment","BackLink","MovieInfo","instance","axios","baseURL","headers","Authorization","fetchTrendingMovies","_fetchTrendingMovies","response","get","abrupt","results","fetchMovieById","_fetchMovieById","_callee2","_context2","_x","fetchMovieCast","_fetchMovieCast","_callee3","_context3","cast","_x2","fetchMovieReviews","_fetchMovieReviews","_callee4","_context4","_x3","fetchMovieByQuery","_fetchMovieByQuery","_callee5","query","_context5","_x4"],"sourceRoot":""}