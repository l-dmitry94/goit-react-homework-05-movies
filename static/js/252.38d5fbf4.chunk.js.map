{"version":3,"file":"static/js/252.38d5fbf4.chunk.js","mappings":"wSASA,EAToB,SAAHA,GAA+B,IAAzBC,EAAQD,EAARC,SAAUC,EAAOF,EAAPE,QAC7B,OACIC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,GAAAE,OAAOL,EAAQ,QACfI,EAAAA,EAAAA,KAAA,KAAAD,SAAIF,MAGhB,E,SCCQK,ECNO,CACXA,Y,QAAaC,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4FDKFC,YAgCxB,EA9BgB,WACZ,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,eAAArB,GAAAsB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OAAnBC,EAAAA,QAAAA,WAAmBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGWE,EAAAA,EAAAA,kBAAsBb,GAAS,KAAD,EAAAO,EAAAE,EAAAK,KAAhDN,EAAOD,EAAPC,QACRT,EAAWS,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEpBO,QAAQC,IAAIR,EAAAM,GAAMG,SAAS,QAEV,OAFUT,EAAAC,KAAA,GAE3BE,EAAAA,QAAAA,SAAiBH,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAd,EAAA,wBAExB,kBAXiB,OAAAxB,EAAAuC,MAAA,KAAAC,UAAA,KAalBnB,GACJ,GAAG,CAACH,IAEJ,IAAMuB,EAAczB,EAAQ0B,KACxB,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAsB3C,EAAQ0C,EAA1BE,eAAkB5C,SAAYC,EAAOyC,EAAPzC,QAAO,OACxCG,EAAAA,EAAAA,KAACyC,EAAW,CAAU7C,SAAUA,EAAUC,QAASA,GAAjC0C,EAA4C,IAItE,OAAOvC,EAAAA,EAAAA,KAAA0C,EAAAA,SAAA,CAAA3C,SAAGY,IAAWX,EAAAA,EAAAA,KAACE,EAAW,CAAAH,SAAEqC,KACvC,C,wDEpCMO,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,QAAS,CACLC,cACI,gOAINrB,EAAM,CACRsB,oBAAoB,WAAD,IAAAC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAC,IAAA,IAAA+B,EAAA,OAAAhC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMmB,EAASQ,IAAI,uBAAuB,KAAD,EAA5C,OAARD,EAAQ5B,EAAAK,KAAAL,EAAA8B,OAAA,SACPF,EAASG,KAAKhC,SAAO,wBAAAC,EAAAW,OAAA,GAAAd,EAAA,KAC/B,yBAAA8B,EAAAf,MAAA,KAAAC,UAAA,EAHmB,GAKpBmB,eAAe,WAAD,IAAAC,GAAAtC,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsC,EAAM3C,GAAO,IAAAqC,EAAA,OAAAhC,IAAAA,MAAA,SAAAuC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACFmB,EAASQ,IAAI,UAADlD,OAAWY,IAAW,KAAD,EAA1C,OAARqC,EAAQO,EAAA9B,KAAA8B,EAAAL,OAAA,SACPF,EAASG,MAAI,wBAAAI,EAAAxB,OAAA,GAAAuB,EAAA,KACvB,gBAAAE,GAAA,OAAAH,EAAArB,MAAA,KAAAC,UAAA,EAHc,GAKfwB,eAAe,WAAD,IAAAC,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAA2C,EAAMhD,GAAO,IAAAqC,EAAA,OAAAhC,IAAAA,MAAA,SAAA4C,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACFmB,EAASQ,IAAI,UAADlD,OAAWY,EAAO,aAAY,KAAD,EAAlD,OAARqC,EAAQY,EAAAnC,KAAAmC,EAAAV,OAAA,SACPF,EAASG,KAAKU,MAAI,wBAAAD,EAAA7B,OAAA,GAAA4B,EAAA,KAC5B,gBAAAG,GAAA,OAAAJ,EAAA1B,MAAA,KAAAC,UAAA,EAHc,GAKf8B,kBAAkB,WAAD,IAAAC,GAAAjD,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAiD,EAAMtD,GAAO,IAAAqC,EAAA,OAAAhC,IAAAA,MAAA,SAAAkD,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EACLmB,EAASQ,IAAI,UAADlD,OAAWY,EAAO,aAAY,KAAD,EAAlD,OAARqC,EAAQkB,EAAAzC,KAAAyC,EAAAhB,OAAA,SACPF,EAASG,MAAI,wBAAAe,EAAAnC,OAAA,GAAAkC,EAAA,KACvB,gBAAAE,GAAA,OAAAH,EAAAhC,MAAA,KAAAC,UAAA,EAHiB,GAKlBmC,kBAAkB,WAAD,IAAAC,GAAAtD,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsD,EAAMC,GAAK,IAAAvB,EAAA,OAAAhC,IAAAA,MAAA,SAAAwD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,cAAAkD,EAAAlD,KAAA,EACHmB,EAASQ,IAAI,uBAADlD,OAAwBwE,IAAS,KAAD,EAArD,OAARvB,EAAQwB,EAAA/C,KAAA+C,EAAAtB,OAAA,SACPF,EAASG,KAAKhC,SAAO,wBAAAqD,EAAAzC,OAAA,GAAAuC,EAAA,KAC/B,gBAAAG,GAAA,OAAAJ,EAAArC,MAAA,KAAAC,UAAA,EAHiB,IAMtB,K","sources":["components/Reviews/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.jsx","services/movies-api.js"],"sourcesContent":["const ReviewsItem = ({ username, content }) => {\n    return (\n        <li>\n            <b>{`${username}:`}</b>\n            <p>{content}</p>\n        </li>\n    );\n};\n\nexport default ReviewsItem;\n","import { Loading } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.7.min.css';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'services/movies-api';\nimport ReviewsItem from './ReviewsItem';\nimport Styled from './Reviews.styled';\n\nconst { ReviewsList } = Styled;\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const movieReviews = async () => {\n            Loading.standard();\n\n            try {\n                const { results } = await API.fetchMovieReviews(movieId);\n                setReviews(results);\n            } catch (error) {\n                console.log(error.message);\n            } finally {\n                Loading.remove();\n            }\n        };\n\n        movieReviews();\n    }, [movieId]);\n\n    const reviewsList = reviews.map(\n        ({ id, author_details: { username }, content }) => (\n            <ReviewsItem key={id} username={username} content={content} />\n        )\n    );\n\n    return <>{reviews && <ReviewsList>{reviewsList}</ReviewsList>}</>;\n};\n\nexport default Reviews;\n","import styled from \"@emotion/styled\"\n\nconst Styled = {\n    ReviewsList: styled.ul`\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n    `\n}\n\nexport default Styled","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    headers: {\n        Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMzQxZjA4MDA4NmRkZjBkNThjNGJkYzA3ZWY0YTAzNiIsInN1YiI6IjY1YTYzZjQxOWJjZDBmMDEyM2JhNzNmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9KEtiGYN_3JrU51Sf_c_is4ZEHWjNunRsBdl0i-lHic',\n    },\n});\n\nconst API = {\n    fetchTrendingMovies: async () => {\n        const response = await instance.get('/trending/movie/day');\n        return response.data.results;\n    },\n\n    fetchMovieById: async movieId => {\n        const response = await instance.get(`/movie/${movieId}`);\n        return response.data;\n    },\n\n    fetchMovieCast: async movieId => {\n        const response = await instance.get(`/movie/${movieId}/credits`);\n        return response.data.cast;\n    },\n\n    fetchMovieReviews: async movieId => {\n        const response = await instance.get(`/movie/${movieId}/reviews`);\n        return response.data;\n    },\n\n    fetchMovieByQuery: async query => {\n        const response = await instance.get(`/search/movie?query=${query}`);\n        return response.data.results;\n    },\n};\n\nexport default API;\n"],"names":["_ref","username","content","_jsxs","children","_jsx","concat","ReviewsList","styled","_templateObject","_taggedTemplateLiteral","Styled","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","movieReviews","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$API$fetchMovie","results","_context","prev","next","Loading","API","sent","t0","console","log","message","finish","stop","apply","arguments","reviewsList","map","_ref2","id","author_details","ReviewsItem","_Fragment","instance","axios","baseURL","headers","Authorization","fetchTrendingMovies","_fetchTrendingMovies","response","get","abrupt","data","fetchMovieById","_fetchMovieById","_callee2","_context2","_x","fetchMovieCast","_fetchMovieCast","_callee3","_context3","cast","_x2","fetchMovieReviews","_fetchMovieReviews","_callee4","_context4","_x3","fetchMovieByQuery","_fetchMovieByQuery","_callee5","query","_context5","_x4"],"sourceRoot":""}